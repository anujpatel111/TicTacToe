import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.GridPane;
import javafx.stage.Stage;

public class ModifiedTicTacToe extends Application {

    private char currentPlayer = 'X';
    private Button[][] buttons = new Button[5][5];

    public static void main(String[] args) {
        launch(args);
    }

    @Override
    public void start(Stage primaryStage) {
        GridPane grid = new GridPane();

        for (int row = 0; row < 5; row++) {
            for (int col = 0; col < 5; col++) {
                Button button = createButton();
                int finalRow = row;
                int finalCol = col;
                button.setOnAction(e -> handleButtonClick(finalRow, finalCol));
                buttons[row][col] = button;
                grid.add(button, col, row);
            }
        }

        Scene scene = new Scene(grid, 300, 300);
        primaryStage.setTitle("Modified Tic Tac Toe 5x5");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    private Button createButton() {
        Button button = new Button();
        button.setMinSize(60, 60);
        button.setStyle("-fx-font-size: 2em;");
        return button;
    }

    private void handleButtonClick(int row, int col) {
        if (buttons[row][col].getText().equals("")) {
            buttons[row][col].setText(String.valueOf(currentPlayer));

            if (checkForWinner(row, col)) {
                displayWinner();
                resetGame();
            } else {
                currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
            }
        }
    }

    private boolean checkForWinner(int row, int col) {
        // Check row
        for (int i = 0; i < 5; i++) {
            if (buttons[row][i].getText().charAt(0) != currentPlayer) {
                break;
            }
            if (i == 4) {
                return true;
            }
        }

        // Check column
        for (int i = 0; i < 5; i++) {
            if (buttons[i][col].getText().charAt(0) != currentPlayer) {
                break;
            }
            if (i == 4) {
                return true;
            }
        }

        // Check diagonals
        if (row == col || row + col == 4) {
            for (int i = 0; i < 5; i++) {
                if (buttons[i][i].getText().charAt(0) != currentPlayer) {
                    break;
                }
                if (i == 4) {
                    return true;
                }
            }

            for (int i = 0; i < 5; i++) {
                if (buttons[i][4 - i].getText().charAt(0) != currentPlayer) {
                    break;
                }
                if (i == 4) {
                    return true;
                }
            }
        }

        return false;
    }

    private void displayWinner() {
        System.out.println("Player " + currentPlayer + " wins!");
    }

    private void resetGame() {
        for (int row = 0; row < 5; row++) {
            for (int col = 0; col < 5; col++) {
                buttons[row][col].setText("");
            }
        }
        currentPlayer = 'X';
    }
}
